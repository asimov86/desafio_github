Clase 14 Git

Parado en la carpeta desde la terminal
git init *//Iniciar repositorio
git status *//Para chequear el directorio
git add <nombre archivo> *//Para subir el cambio
git commit -m "primer commit" *//Para commitear el cambio.

git log *// Para ver el historial de losm cambios que se han ido haciendo en el repositorio.

git add .  *//Permite agregar todos los cambios
git add .jpg *.//Solo subir[ia los archivos con extensi[on .jpg
git add bootstrap. *// Permite subir solo los archivos que se llaman bootstrap y con cualquier extension
git add --all *// Subir todos los cambios


*//No es recomendable realizar varios cambios en el código y luego hacer un sólo commit.  es decir, cambiar el footer, cambiar algo en el css, subir varias imagenes a la carpeta imagenes y luego commitear; no se debe hacer eso.


*//Si estamos trabajando con el index, una vez terminemos guardar cambios y commitear el index antes de pasar a trabajar por ejemplo con la sección contactos.html
Ej commit

git commit -m "index modificado"
*//Luego trabajar con la otra secci[on, guardar cambios con git add y luego commit
git commit -m "sección contactos.html modificada"


*// Mantener el orden 




*// Ramas

Crear rama secundaria
git branch *// para visualizar, cuando se consulta aparece un asterisco al lado de la rama seleccionada o rama en la que se encuentra trabajando actualmente.
git branch nueva_rama *//para crear rama
git checkout nueva_rama *//Para cambiar a la rama creada


git branch rama_tres *//crear rama 3
git branch rama_cuatro
git branch -D rama_cuatro *//Permite borrar una rama

*//Recuperar contenido de una rama antes de borrarla.
*//Me muevo primero a la rama principal o a la rama a la que *//me quiero llevar el cambio.
*//Y le doy el comando de fusion.
*//git merge nueva_rama *//Fusionar rama con la master.


git add . *//Subo los cambios a la rama secundaria
git commit -m "version 1 en nueva rama"
git checkout master *// me muevo a la master
git merge nueva_rama *// Fusiono los cambios de la "nueva_rama" con la rama "master"


*// Volver a version anterior
##MOVER ENTRE COMMITS
git log --oneline #Esto nos muestra historial resumido de commits, necesitamos copiar el ID del commit al que queremos volver
#Hecho esto ingresamos:
git checkout id delcommit
# Si verifico donde estoy parado con git branch se puede observar que se está en el commit ya no en la rama, por lo que debería luego moverme a la rama



*//Después de crear el repositorio publico en GitHub. Seguir los pasos indicados

…or push an existing repository from the command line
git remote add origin https://github.com/asimov86/desafio_github.git
git branch -M main    *//Renombrado de rama master a main.
git push -u origin main


git push --all *// Si tengo varios commits a subir.
git push *//SI quiero subir solo el ultimo commit de un grupo de commits 

*//como ignorar aquellos archivos que no queremos subir?
Archivo gitignore.
crear .gitignore de la siguiente manera


******************Inicio**************

# Dentro de Gitignore armo una lista de objetos a ignorar

# Ignora archivos
.DS_store
package.json

#Ignora carpetas

node_modules

#Ignorar subcarpetas

nombrecarpeta/nombresubcarpeta


#ignorar todos los archivos dentro de un carpeta

bootstrap/scss/*.scss

nombrecarpeta/archivo

# Ignora todos los archivos con la misma extensión

*.txt

*.gif

***************Fin **************
Nota no copiar las etiquetas Inicio Fin que tienen asteriscos.


GitHub pages
